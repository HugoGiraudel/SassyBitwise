/// Checks whether argument list is valid
/// @param {List} $args - argument list
/// @return {Bool}
@function arguments-validator($args) {
  $last: null;
  $operators: (
    "&"  : "and",
    "|"  : "or",
    "^"  : "xor",
    "<<" : "shift-left",
    ">>" : "shift-right"
  );

  @if length($args) < 2 {
    @return false;
  }

  @each $current in $args {
    @if map-has-key($operators, $current) {
      @if not $last {
        @error "You can't start with another operator than `~`.";
      }
    }

    @else if $current == '~' {
      @if type-of($last) == "number" {
        @error "Operator `~` can't follow a number.";
      }
    }

    @else if type-of($current) == "number" {
      @if type-of($last) == "number" {
        @error "A number can't follow a number. They must be separated by an operator";
      }
    }

    @else {
      @return false;
    }

    $last: $current;
  }

  @return true;
}
